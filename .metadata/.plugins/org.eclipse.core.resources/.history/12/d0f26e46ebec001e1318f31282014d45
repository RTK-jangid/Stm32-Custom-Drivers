/*
 * stm32f40_RCC_drivers.c
 *
 *  Created on: Mar 28, 2024
 *      Author: ritik
 */


#include "stm32f407_RCC_drivers.h"

uint32_t RCC_getPLLOutputClock(void){
	return 0;
}



uint16_t AHB_PreScalar[8] ={2,4,8,16,64,128,256,512};
uint16_t APB_PreScalar[4] ={2,4,8,16};

uint32_t RCC_GetPCLK1Value(void){
	uint32_t pclk1,SystemClk,ahpb,apb;

	uint8_t clksrc,temp;

	clksrc = ((RCC_REG->CFGR >> 2) & 0x3);
	if (clksrc == 0){
		SystemClk = 16000000;
	}else if (clksrc == 2){
		SystemClk = 8000000;
	}else if(clksrc == 3){
		SystemClk = RCC_getPLLOutputClock();
	}

	temp =  ((RCC_REG->CFGR >> 4) & 0xF);
	if(temp<8){
		ahpb=1;
	}else{
		ahpb = AHB_PreScalar[temp-8];
	}

	temp =  ((RCC_REG->CFGR >> 10) & 0x3);
	if(temp<4){
		apb=1;
	}else{
		apb = APB_PreScalar[temp-4];
	}

	pclk1 = (SystemClk/ahpb)/apb;

	return pclk1;
}


uint32_t RCC_GetPCLK2Value(void){
	uint32_t pclk2,SystemClk,ahpb,apb;

	uint8_t clksrc,temp;

	clksrc = ((RCC_REG->CFGR >> 2) & 0x3);
	if (clksrc == 0){
		SystemClk = 16000000;
	}else if (clksrc == 2){
		SystemClk = 8000000;
	}else if(clksrc == 3){
		SystemClk = RCC_getPLLOutputClock();
	}

	temp =  ((RCC_REG->CFGR >> 4) & 0xF);
	if(temp<8){
		ahpb=1;
	}else{
		ahpb = AHB_PreScalar[temp-8];
	}

	temp =  ((RCC_REG->CFGR >> 13) & 0x3);
	if(temp<4){
		apb=1;
	}else{
		apb = APB_PreScalar[temp-4];
	}

	pclk2 = (SystemClk/ahpb)/apb;

	return pclk2;
}
