/*
 * SPI_COMMU_Arduino.c
 *
 *  Created on: Mar 5, 2024
 *      Author: ritik
 */


/*
 * SPI_dataSend_testing.c
 *
 *  Created on: Mar 4, 2024
 *      Author: ritik
 */

#include "stm32f407xx.h"
#include<stdint.h>
#include<stdio.h>
#include<string.h>
void delay(void){
	for(int i=0;i<25000;i++);
}
void SPI2_inits(SPI_Handle_t *spi2){


	SPI2_ENABLE();
	spi2->pSPIx=SPI2_REG;

	spi2->SPIConfig.Mode=SPI_DEVICE_MASTER;
	spi2->SPIConfig.CPHA=CPHA_DI;
	spi2->SPIConfig.CPOL=CPOL_DI;
	spi2->SPIConfig.DFF = SHIFT_REGISTER_SIZE_8BITS;
	spi2->SPIConfig.SSM=SPI_SSM_DI;
	spi2->SPIConfig.SclkSpeed=SPI_DRIVER_SPEED_DIV8;
	spi2->SPIConfig.BusConfig = SPI_BUS_FD;
	SPI_init(spi2);



}


void GPIO_INITs(void){

	GPIO_Handle_t gpioB;

	gpioB.pGPIOx=GPIOB_REG;

	gpioB.GPIO_PinConfig.PinMode=GPIO_MODE_ALTFUN;
	gpioB.GPIO_PinConfig.PinAltFunMode=5;
	gpioB.GPIO_PinConfig.PinOPType=GPIO_OP_TYPE_PP;
	gpioB.GPIO_PinConfig.PinPuPdControl=GPIO_NO_PUPD;
	gpioB.GPIO_PinConfig.PinSpeed=GPIO_OSPEED_HIGH;

	//SCLK
	gpioB.GPIO_PinConfig.PinNumber=GPIO_PIN_NO_13;
	GPIO_init(&gpioB);

	//MISO
//	gpioB.GPIO_PinConfig.PinNumber=GPIO_PIN_NO_14;
//	GPIO_init(&gpioB);

	//MOSI
	gpioB.GPIO_PinConfig.PinNumber=GPIO_PIN_NO_15;
	GPIO_init(&gpioB);

	//NSS
	gpioB.GPIO_PinConfig.PinNumber=GPIO_PIN_NO_12;
	GPIO_init(&gpioB);

	GPIO_Handle_t gpioE_btn;
    /* Loop forever */


	gpioE_btn.pGPIOx = GPIOE_REG;
	gpioE_btn.GPIO_PinConfig.PinMode = GPIO_MODE_IT_FT;

	gpioE_btn.GPIO_PinConfig.PinNumber = GPIO_PIN_NO_3;
	gpioE_btn.GPIO_PinConfig.PinOPType = GPIO_OP_TYPE_PP;
	gpioE_btn.GPIO_PinConfig.PinPuPdControl = GPIO_PU;
	gpioE_btn.GPIO_PinConfig.PinSpeed = GPIO_OSPEED_MED;
	gpioE_btn.GPIO_PinConfig.PinAltFunMode = 0;

	GPIO_init(&gpioE_btn);
	GPIO_IRQConfig(EXTI3_IRQ_NO, ENABLE);
	GPIO_IRQ_Set_Priority(EXTI3_IRQ_NO, 15);
}


int main(){

	SPI_Handle_t spi2;

	GPIO_INITs();

	SPI2_inits(&spi2);

//	SSI_Config(SPI2_REG,ENABLE); //ONly when SSM is 1 or in software select mode


	SSOE_Config(SPI2_REG,ENABLE); //for automatic management of low and high of nss pin

	while(1);

	return 0;
}
void EXTI3_IRQHandler(void){
	delay();
	GPIO_IRQHandling(GPIO_PIN_NO_3);

	char user[]="Hello World!";

	SPI_Enable(SPI2_REG,ENABLE);

	uint8_t data =strlen(user);

	SPI_Send(SPI2_REG,&data, 1);

	SPI_Send(SPI2_REG,(uint8_t*)user, strlen(user));

	while(getFlag_Status(SPI2_REG, SPI_FLAG_BUSY));

	SPI_Enable(SPI2_REG, DISABLE);
}
