
USART3_Interrupt_IRQ39.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000b9c  08000188  08000188  00010188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000010  08000d24  08000d24  00010d24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08000d34  08000d34  0002005c  2**0
                  CONTENTS
  4 .ARM          00000000  08000d34  08000d34  0002005c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000d34  08000d34  0002005c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000d34  08000d34  00010d34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000d38  08000d38  00010d38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000005c  20000000  08000d3c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  0002005c  2**0
                  CONTENTS
 10 .bss          0000016c  2000005c  2000005c  0002005c  2**2
                  ALLOC
 11 ._user_heap_stack 00000600  200001c8  200001c8  0002005c  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0002005c  2**0
                  CONTENTS, READONLY
 13 .comment      00000043  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 14 .debug_info   00000919  00000000  00000000  000200cf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_abbrev 00000317  00000000  00000000  000209e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges 00000118  00000000  00000000  00020d00  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_rnglists 000000be  00000000  00000000  00020e18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_macro  00002c89  00000000  00000000  00020ed6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_line   00001237  00000000  00000000  00023b5f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0000972f  00000000  00000000  00024d96  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_frame  000009d0  00000000  00000000  0002e4c8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 0000006a  00000000  00000000  0002ee98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	; (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	; (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	; (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	2000005c 	.word	0x2000005c
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000d0c 	.word	0x08000d0c

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	; (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	; (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	; (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000060 	.word	0x20000060
 80001c4:	08000d0c 	.word	0x08000d0c

080001c8 <main>:
#include <stdint.h>

#include <stdio.h>
#define USART3_IRQ 39
int main(void)
{	uint32_t volatile *IPCER= (uint32_t*)(0xE000E204);
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
 80001ce:	4b0b      	ldr	r3, [pc, #44]	; (80001fc <main+0x34>)
 80001d0:	607b      	str	r3, [r7, #4]
	uint32_t volatile *ISCER= (uint32_t*)(0xE000E104);
 80001d2:	4b0b      	ldr	r3, [pc, #44]	; (8000200 <main+0x38>)
 80001d4:	603b      	str	r3, [r7, #0]

	*IPCER |= (1<<(USART3_IRQ%32));
 80001d6:	687b      	ldr	r3, [r7, #4]
 80001d8:	681b      	ldr	r3, [r3, #0]
 80001da:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80001de:	687b      	ldr	r3, [r7, #4]
 80001e0:	601a      	str	r2, [r3, #0]
	*ISCER |= (1<<(USART3_IRQ%32));
 80001e2:	683b      	ldr	r3, [r7, #0]
 80001e4:	681b      	ldr	r3, [r3, #0]
 80001e6:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 80001ea:	683b      	ldr	r3, [r7, #0]
 80001ec:	601a      	str	r2, [r3, #0]
 80001ee:	2300      	movs	r3, #0
	/* Loop forever */

}
 80001f0:	4618      	mov	r0, r3
 80001f2:	370c      	adds	r7, #12
 80001f4:	46bd      	mov	sp, r7
 80001f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001fa:	4770      	bx	lr
 80001fc:	e000e204 	.word	0xe000e204
 8000200:	e000e104 	.word	0xe000e104

08000204 <USART3_IRQHandler>:

void USART3_IRQHandler (void){
 8000204:	b580      	push	{r7, lr}
 8000206:	af00      	add	r7, sp, #0
	printf("Handler Mode\n");
 8000208:	4802      	ldr	r0, [pc, #8]	; (8000214 <USART3_IRQHandler+0x10>)
 800020a:	f000 f9e9 	bl	80005e0 <puts>
}
 800020e:	bf00      	nop
 8000210:	bd80      	pop	{r7, pc}
 8000212:	bf00      	nop
 8000214:	08000d24 	.word	0x08000d24

08000218 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000218:	b580      	push	{r7, lr}
 800021a:	b086      	sub	sp, #24
 800021c:	af00      	add	r7, sp, #0
 800021e:	60f8      	str	r0, [r7, #12]
 8000220:	60b9      	str	r1, [r7, #8]
 8000222:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000224:	2300      	movs	r3, #0
 8000226:	617b      	str	r3, [r7, #20]
 8000228:	e00a      	b.n	8000240 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 800022a:	f3af 8000 	nop.w
 800022e:	4601      	mov	r1, r0
 8000230:	68bb      	ldr	r3, [r7, #8]
 8000232:	1c5a      	adds	r2, r3, #1
 8000234:	60ba      	str	r2, [r7, #8]
 8000236:	b2ca      	uxtb	r2, r1
 8000238:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800023a:	697b      	ldr	r3, [r7, #20]
 800023c:	3301      	adds	r3, #1
 800023e:	617b      	str	r3, [r7, #20]
 8000240:	697a      	ldr	r2, [r7, #20]
 8000242:	687b      	ldr	r3, [r7, #4]
 8000244:	429a      	cmp	r2, r3
 8000246:	dbf0      	blt.n	800022a <_read+0x12>
  }

  return len;
 8000248:	687b      	ldr	r3, [r7, #4]
}
 800024a:	4618      	mov	r0, r3
 800024c:	3718      	adds	r7, #24
 800024e:	46bd      	mov	sp, r7
 8000250:	bd80      	pop	{r7, pc}

08000252 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8000252:	b580      	push	{r7, lr}
 8000254:	b086      	sub	sp, #24
 8000256:	af00      	add	r7, sp, #0
 8000258:	60f8      	str	r0, [r7, #12]
 800025a:	60b9      	str	r1, [r7, #8]
 800025c:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800025e:	2300      	movs	r3, #0
 8000260:	617b      	str	r3, [r7, #20]
 8000262:	e009      	b.n	8000278 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8000264:	68bb      	ldr	r3, [r7, #8]
 8000266:	1c5a      	adds	r2, r3, #1
 8000268:	60ba      	str	r2, [r7, #8]
 800026a:	781b      	ldrb	r3, [r3, #0]
 800026c:	4618      	mov	r0, r3
 800026e:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000272:	697b      	ldr	r3, [r7, #20]
 8000274:	3301      	adds	r3, #1
 8000276:	617b      	str	r3, [r7, #20]
 8000278:	697a      	ldr	r2, [r7, #20]
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	429a      	cmp	r2, r3
 800027e:	dbf1      	blt.n	8000264 <_write+0x12>
  }
  return len;
 8000280:	687b      	ldr	r3, [r7, #4]
}
 8000282:	4618      	mov	r0, r3
 8000284:	3718      	adds	r7, #24
 8000286:	46bd      	mov	sp, r7
 8000288:	bd80      	pop	{r7, pc}

0800028a <_close>:

int _close(int file)
{
 800028a:	b480      	push	{r7}
 800028c:	b083      	sub	sp, #12
 800028e:	af00      	add	r7, sp, #0
 8000290:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8000292:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
}
 8000296:	4618      	mov	r0, r3
 8000298:	370c      	adds	r7, #12
 800029a:	46bd      	mov	sp, r7
 800029c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002a0:	4770      	bx	lr

080002a2 <_fstat>:


int _fstat(int file, struct stat *st)
{
 80002a2:	b480      	push	{r7}
 80002a4:	b083      	sub	sp, #12
 80002a6:	af00      	add	r7, sp, #0
 80002a8:	6078      	str	r0, [r7, #4]
 80002aa:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 80002ac:	683b      	ldr	r3, [r7, #0]
 80002ae:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 80002b2:	605a      	str	r2, [r3, #4]
  return 0;
 80002b4:	2300      	movs	r3, #0
}
 80002b6:	4618      	mov	r0, r3
 80002b8:	370c      	adds	r7, #12
 80002ba:	46bd      	mov	sp, r7
 80002bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002c0:	4770      	bx	lr

080002c2 <_isatty>:

int _isatty(int file)
{
 80002c2:	b480      	push	{r7}
 80002c4:	b083      	sub	sp, #12
 80002c6:	af00      	add	r7, sp, #0
 80002c8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80002ca:	2301      	movs	r3, #1
}
 80002cc:	4618      	mov	r0, r3
 80002ce:	370c      	adds	r7, #12
 80002d0:	46bd      	mov	sp, r7
 80002d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002d6:	4770      	bx	lr

080002d8 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80002d8:	b480      	push	{r7}
 80002da:	b085      	sub	sp, #20
 80002dc:	af00      	add	r7, sp, #0
 80002de:	60f8      	str	r0, [r7, #12]
 80002e0:	60b9      	str	r1, [r7, #8]
 80002e2:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80002e4:	2300      	movs	r3, #0
}
 80002e6:	4618      	mov	r0, r3
 80002e8:	3714      	adds	r7, #20
 80002ea:	46bd      	mov	sp, r7
 80002ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002f0:	4770      	bx	lr
	...

080002f4 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80002f4:	b580      	push	{r7, lr}
 80002f6:	b086      	sub	sp, #24
 80002f8:	af00      	add	r7, sp, #0
 80002fa:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80002fc:	4a14      	ldr	r2, [pc, #80]	; (8000350 <_sbrk+0x5c>)
 80002fe:	4b15      	ldr	r3, [pc, #84]	; (8000354 <_sbrk+0x60>)
 8000300:	1ad3      	subs	r3, r2, r3
 8000302:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000304:	697b      	ldr	r3, [r7, #20]
 8000306:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000308:	4b13      	ldr	r3, [pc, #76]	; (8000358 <_sbrk+0x64>)
 800030a:	681b      	ldr	r3, [r3, #0]
 800030c:	2b00      	cmp	r3, #0
 800030e:	d102      	bne.n	8000316 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000310:	4b11      	ldr	r3, [pc, #68]	; (8000358 <_sbrk+0x64>)
 8000312:	4a12      	ldr	r2, [pc, #72]	; (800035c <_sbrk+0x68>)
 8000314:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000316:	4b10      	ldr	r3, [pc, #64]	; (8000358 <_sbrk+0x64>)
 8000318:	681a      	ldr	r2, [r3, #0]
 800031a:	687b      	ldr	r3, [r7, #4]
 800031c:	4413      	add	r3, r2
 800031e:	693a      	ldr	r2, [r7, #16]
 8000320:	429a      	cmp	r2, r3
 8000322:	d207      	bcs.n	8000334 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000324:	f000 fa8a 	bl	800083c <__errno>
 8000328:	4603      	mov	r3, r0
 800032a:	220c      	movs	r2, #12
 800032c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800032e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8000332:	e009      	b.n	8000348 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000334:	4b08      	ldr	r3, [pc, #32]	; (8000358 <_sbrk+0x64>)
 8000336:	681b      	ldr	r3, [r3, #0]
 8000338:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800033a:	4b07      	ldr	r3, [pc, #28]	; (8000358 <_sbrk+0x64>)
 800033c:	681a      	ldr	r2, [r3, #0]
 800033e:	687b      	ldr	r3, [r7, #4]
 8000340:	4413      	add	r3, r2
 8000342:	4a05      	ldr	r2, [pc, #20]	; (8000358 <_sbrk+0x64>)
 8000344:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8000346:	68fb      	ldr	r3, [r7, #12]
}
 8000348:	4618      	mov	r0, r3
 800034a:	3718      	adds	r7, #24
 800034c:	46bd      	mov	sp, r7
 800034e:	bd80      	pop	{r7, pc}
 8000350:	20020000 	.word	0x20020000
 8000354:	00000400 	.word	0x00000400
 8000358:	20000078 	.word	0x20000078
 800035c:	200001c8 	.word	0x200001c8

08000360 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000360:	480d      	ldr	r0, [pc, #52]	; (8000398 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000362:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000364:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000368:	480c      	ldr	r0, [pc, #48]	; (800039c <LoopForever+0x6>)
  ldr r1, =_edata
 800036a:	490d      	ldr	r1, [pc, #52]	; (80003a0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800036c:	4a0d      	ldr	r2, [pc, #52]	; (80003a4 <LoopForever+0xe>)
  movs r3, #0
 800036e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000370:	e002      	b.n	8000378 <LoopCopyDataInit>

08000372 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000372:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000374:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000376:	3304      	adds	r3, #4

08000378 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000378:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800037a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800037c:	d3f9      	bcc.n	8000372 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800037e:	4a0a      	ldr	r2, [pc, #40]	; (80003a8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000380:	4c0a      	ldr	r4, [pc, #40]	; (80003ac <LoopForever+0x16>)
  movs r3, #0
 8000382:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000384:	e001      	b.n	800038a <LoopFillZerobss>

08000386 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000386:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000388:	3204      	adds	r2, #4

0800038a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800038a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800038c:	d3fb      	bcc.n	8000386 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800038e:	f000 fa5b 	bl	8000848 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000392:	f7ff ff19 	bl	80001c8 <main>

08000396 <LoopForever>:

LoopForever:
  b LoopForever
 8000396:	e7fe      	b.n	8000396 <LoopForever>
  ldr   r0, =_estack
 8000398:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 800039c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80003a0:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 80003a4:	08000d3c 	.word	0x08000d3c
  ldr r2, =_sbss
 80003a8:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 80003ac:	200001c8 	.word	0x200001c8

080003b0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003b0:	e7fe      	b.n	80003b0 <ADC_IRQHandler>
	...

080003b4 <std>:
 80003b4:	2300      	movs	r3, #0
 80003b6:	b510      	push	{r4, lr}
 80003b8:	4604      	mov	r4, r0
 80003ba:	e9c0 3300 	strd	r3, r3, [r0]
 80003be:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80003c2:	6083      	str	r3, [r0, #8]
 80003c4:	8181      	strh	r1, [r0, #12]
 80003c6:	6643      	str	r3, [r0, #100]	; 0x64
 80003c8:	81c2      	strh	r2, [r0, #14]
 80003ca:	6183      	str	r3, [r0, #24]
 80003cc:	4619      	mov	r1, r3
 80003ce:	2208      	movs	r2, #8
 80003d0:	305c      	adds	r0, #92	; 0x5c
 80003d2:	f000 f9e5 	bl	80007a0 <memset>
 80003d6:	4b0d      	ldr	r3, [pc, #52]	; (800040c <std+0x58>)
 80003d8:	6263      	str	r3, [r4, #36]	; 0x24
 80003da:	4b0d      	ldr	r3, [pc, #52]	; (8000410 <std+0x5c>)
 80003dc:	62a3      	str	r3, [r4, #40]	; 0x28
 80003de:	4b0d      	ldr	r3, [pc, #52]	; (8000414 <std+0x60>)
 80003e0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80003e2:	4b0d      	ldr	r3, [pc, #52]	; (8000418 <std+0x64>)
 80003e4:	6323      	str	r3, [r4, #48]	; 0x30
 80003e6:	4b0d      	ldr	r3, [pc, #52]	; (800041c <std+0x68>)
 80003e8:	6224      	str	r4, [r4, #32]
 80003ea:	429c      	cmp	r4, r3
 80003ec:	d006      	beq.n	80003fc <std+0x48>
 80003ee:	f103 0268 	add.w	r2, r3, #104	; 0x68
 80003f2:	4294      	cmp	r4, r2
 80003f4:	d002      	beq.n	80003fc <std+0x48>
 80003f6:	33d0      	adds	r3, #208	; 0xd0
 80003f8:	429c      	cmp	r4, r3
 80003fa:	d105      	bne.n	8000408 <std+0x54>
 80003fc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8000400:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000404:	f000 ba44 	b.w	8000890 <__retarget_lock_init_recursive>
 8000408:	bd10      	pop	{r4, pc}
 800040a:	bf00      	nop
 800040c:	080005f1 	.word	0x080005f1
 8000410:	08000613 	.word	0x08000613
 8000414:	0800064b 	.word	0x0800064b
 8000418:	0800066f 	.word	0x0800066f
 800041c:	2000007c 	.word	0x2000007c

08000420 <stdio_exit_handler>:
 8000420:	4a02      	ldr	r2, [pc, #8]	; (800042c <stdio_exit_handler+0xc>)
 8000422:	4903      	ldr	r1, [pc, #12]	; (8000430 <stdio_exit_handler+0x10>)
 8000424:	4803      	ldr	r0, [pc, #12]	; (8000434 <stdio_exit_handler+0x14>)
 8000426:	f000 b869 	b.w	80004fc <_fwalk_sglue>
 800042a:	bf00      	nop
 800042c:	20000000 	.word	0x20000000
 8000430:	08000b95 	.word	0x08000b95
 8000434:	2000000c 	.word	0x2000000c

08000438 <cleanup_stdio>:
 8000438:	6841      	ldr	r1, [r0, #4]
 800043a:	4b0c      	ldr	r3, [pc, #48]	; (800046c <cleanup_stdio+0x34>)
 800043c:	4299      	cmp	r1, r3
 800043e:	b510      	push	{r4, lr}
 8000440:	4604      	mov	r4, r0
 8000442:	d001      	beq.n	8000448 <cleanup_stdio+0x10>
 8000444:	f000 fba6 	bl	8000b94 <_fflush_r>
 8000448:	68a1      	ldr	r1, [r4, #8]
 800044a:	4b09      	ldr	r3, [pc, #36]	; (8000470 <cleanup_stdio+0x38>)
 800044c:	4299      	cmp	r1, r3
 800044e:	d002      	beq.n	8000456 <cleanup_stdio+0x1e>
 8000450:	4620      	mov	r0, r4
 8000452:	f000 fb9f 	bl	8000b94 <_fflush_r>
 8000456:	68e1      	ldr	r1, [r4, #12]
 8000458:	4b06      	ldr	r3, [pc, #24]	; (8000474 <cleanup_stdio+0x3c>)
 800045a:	4299      	cmp	r1, r3
 800045c:	d004      	beq.n	8000468 <cleanup_stdio+0x30>
 800045e:	4620      	mov	r0, r4
 8000460:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000464:	f000 bb96 	b.w	8000b94 <_fflush_r>
 8000468:	bd10      	pop	{r4, pc}
 800046a:	bf00      	nop
 800046c:	2000007c 	.word	0x2000007c
 8000470:	200000e4 	.word	0x200000e4
 8000474:	2000014c 	.word	0x2000014c

08000478 <global_stdio_init.part.0>:
 8000478:	b510      	push	{r4, lr}
 800047a:	4b0b      	ldr	r3, [pc, #44]	; (80004a8 <global_stdio_init.part.0+0x30>)
 800047c:	4c0b      	ldr	r4, [pc, #44]	; (80004ac <global_stdio_init.part.0+0x34>)
 800047e:	4a0c      	ldr	r2, [pc, #48]	; (80004b0 <global_stdio_init.part.0+0x38>)
 8000480:	601a      	str	r2, [r3, #0]
 8000482:	4620      	mov	r0, r4
 8000484:	2200      	movs	r2, #0
 8000486:	2104      	movs	r1, #4
 8000488:	f7ff ff94 	bl	80003b4 <std>
 800048c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 8000490:	2201      	movs	r2, #1
 8000492:	2109      	movs	r1, #9
 8000494:	f7ff ff8e 	bl	80003b4 <std>
 8000498:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800049c:	2202      	movs	r2, #2
 800049e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a2:	2112      	movs	r1, #18
 80004a4:	f7ff bf86 	b.w	80003b4 <std>
 80004a8:	200001b4 	.word	0x200001b4
 80004ac:	2000007c 	.word	0x2000007c
 80004b0:	08000421 	.word	0x08000421

080004b4 <__sfp_lock_acquire>:
 80004b4:	4801      	ldr	r0, [pc, #4]	; (80004bc <__sfp_lock_acquire+0x8>)
 80004b6:	f000 b9ec 	b.w	8000892 <__retarget_lock_acquire_recursive>
 80004ba:	bf00      	nop
 80004bc:	200001bd 	.word	0x200001bd

080004c0 <__sfp_lock_release>:
 80004c0:	4801      	ldr	r0, [pc, #4]	; (80004c8 <__sfp_lock_release+0x8>)
 80004c2:	f000 b9e7 	b.w	8000894 <__retarget_lock_release_recursive>
 80004c6:	bf00      	nop
 80004c8:	200001bd 	.word	0x200001bd

080004cc <__sinit>:
 80004cc:	b510      	push	{r4, lr}
 80004ce:	4604      	mov	r4, r0
 80004d0:	f7ff fff0 	bl	80004b4 <__sfp_lock_acquire>
 80004d4:	6a23      	ldr	r3, [r4, #32]
 80004d6:	b11b      	cbz	r3, 80004e0 <__sinit+0x14>
 80004d8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004dc:	f7ff bff0 	b.w	80004c0 <__sfp_lock_release>
 80004e0:	4b04      	ldr	r3, [pc, #16]	; (80004f4 <__sinit+0x28>)
 80004e2:	6223      	str	r3, [r4, #32]
 80004e4:	4b04      	ldr	r3, [pc, #16]	; (80004f8 <__sinit+0x2c>)
 80004e6:	681b      	ldr	r3, [r3, #0]
 80004e8:	2b00      	cmp	r3, #0
 80004ea:	d1f5      	bne.n	80004d8 <__sinit+0xc>
 80004ec:	f7ff ffc4 	bl	8000478 <global_stdio_init.part.0>
 80004f0:	e7f2      	b.n	80004d8 <__sinit+0xc>
 80004f2:	bf00      	nop
 80004f4:	08000439 	.word	0x08000439
 80004f8:	200001b4 	.word	0x200001b4

080004fc <_fwalk_sglue>:
 80004fc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000500:	4607      	mov	r7, r0
 8000502:	4688      	mov	r8, r1
 8000504:	4614      	mov	r4, r2
 8000506:	2600      	movs	r6, #0
 8000508:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800050c:	f1b9 0901 	subs.w	r9, r9, #1
 8000510:	d505      	bpl.n	800051e <_fwalk_sglue+0x22>
 8000512:	6824      	ldr	r4, [r4, #0]
 8000514:	2c00      	cmp	r4, #0
 8000516:	d1f7      	bne.n	8000508 <_fwalk_sglue+0xc>
 8000518:	4630      	mov	r0, r6
 800051a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800051e:	89ab      	ldrh	r3, [r5, #12]
 8000520:	2b01      	cmp	r3, #1
 8000522:	d907      	bls.n	8000534 <_fwalk_sglue+0x38>
 8000524:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000528:	3301      	adds	r3, #1
 800052a:	d003      	beq.n	8000534 <_fwalk_sglue+0x38>
 800052c:	4629      	mov	r1, r5
 800052e:	4638      	mov	r0, r7
 8000530:	47c0      	blx	r8
 8000532:	4306      	orrs	r6, r0
 8000534:	3568      	adds	r5, #104	; 0x68
 8000536:	e7e9      	b.n	800050c <_fwalk_sglue+0x10>

08000538 <_puts_r>:
 8000538:	6a03      	ldr	r3, [r0, #32]
 800053a:	b570      	push	{r4, r5, r6, lr}
 800053c:	6884      	ldr	r4, [r0, #8]
 800053e:	4605      	mov	r5, r0
 8000540:	460e      	mov	r6, r1
 8000542:	b90b      	cbnz	r3, 8000548 <_puts_r+0x10>
 8000544:	f7ff ffc2 	bl	80004cc <__sinit>
 8000548:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800054a:	07db      	lsls	r3, r3, #31
 800054c:	d405      	bmi.n	800055a <_puts_r+0x22>
 800054e:	89a3      	ldrh	r3, [r4, #12]
 8000550:	0598      	lsls	r0, r3, #22
 8000552:	d402      	bmi.n	800055a <_puts_r+0x22>
 8000554:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000556:	f000 f99c 	bl	8000892 <__retarget_lock_acquire_recursive>
 800055a:	89a3      	ldrh	r3, [r4, #12]
 800055c:	0719      	lsls	r1, r3, #28
 800055e:	d513      	bpl.n	8000588 <_puts_r+0x50>
 8000560:	6923      	ldr	r3, [r4, #16]
 8000562:	b18b      	cbz	r3, 8000588 <_puts_r+0x50>
 8000564:	3e01      	subs	r6, #1
 8000566:	68a3      	ldr	r3, [r4, #8]
 8000568:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800056c:	3b01      	subs	r3, #1
 800056e:	60a3      	str	r3, [r4, #8]
 8000570:	b9e9      	cbnz	r1, 80005ae <_puts_r+0x76>
 8000572:	2b00      	cmp	r3, #0
 8000574:	da2e      	bge.n	80005d4 <_puts_r+0x9c>
 8000576:	4622      	mov	r2, r4
 8000578:	210a      	movs	r1, #10
 800057a:	4628      	mov	r0, r5
 800057c:	f000 f87b 	bl	8000676 <__swbuf_r>
 8000580:	3001      	adds	r0, #1
 8000582:	d007      	beq.n	8000594 <_puts_r+0x5c>
 8000584:	250a      	movs	r5, #10
 8000586:	e007      	b.n	8000598 <_puts_r+0x60>
 8000588:	4621      	mov	r1, r4
 800058a:	4628      	mov	r0, r5
 800058c:	f000 f8b0 	bl	80006f0 <__swsetup_r>
 8000590:	2800      	cmp	r0, #0
 8000592:	d0e7      	beq.n	8000564 <_puts_r+0x2c>
 8000594:	f04f 35ff 	mov.w	r5, #4294967295	; 0xffffffff
 8000598:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800059a:	07da      	lsls	r2, r3, #31
 800059c:	d405      	bmi.n	80005aa <_puts_r+0x72>
 800059e:	89a3      	ldrh	r3, [r4, #12]
 80005a0:	059b      	lsls	r3, r3, #22
 80005a2:	d402      	bmi.n	80005aa <_puts_r+0x72>
 80005a4:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80005a6:	f000 f975 	bl	8000894 <__retarget_lock_release_recursive>
 80005aa:	4628      	mov	r0, r5
 80005ac:	bd70      	pop	{r4, r5, r6, pc}
 80005ae:	2b00      	cmp	r3, #0
 80005b0:	da04      	bge.n	80005bc <_puts_r+0x84>
 80005b2:	69a2      	ldr	r2, [r4, #24]
 80005b4:	429a      	cmp	r2, r3
 80005b6:	dc06      	bgt.n	80005c6 <_puts_r+0x8e>
 80005b8:	290a      	cmp	r1, #10
 80005ba:	d004      	beq.n	80005c6 <_puts_r+0x8e>
 80005bc:	6823      	ldr	r3, [r4, #0]
 80005be:	1c5a      	adds	r2, r3, #1
 80005c0:	6022      	str	r2, [r4, #0]
 80005c2:	7019      	strb	r1, [r3, #0]
 80005c4:	e7cf      	b.n	8000566 <_puts_r+0x2e>
 80005c6:	4622      	mov	r2, r4
 80005c8:	4628      	mov	r0, r5
 80005ca:	f000 f854 	bl	8000676 <__swbuf_r>
 80005ce:	3001      	adds	r0, #1
 80005d0:	d1c9      	bne.n	8000566 <_puts_r+0x2e>
 80005d2:	e7df      	b.n	8000594 <_puts_r+0x5c>
 80005d4:	6823      	ldr	r3, [r4, #0]
 80005d6:	250a      	movs	r5, #10
 80005d8:	1c5a      	adds	r2, r3, #1
 80005da:	6022      	str	r2, [r4, #0]
 80005dc:	701d      	strb	r5, [r3, #0]
 80005de:	e7db      	b.n	8000598 <_puts_r+0x60>

080005e0 <puts>:
 80005e0:	4b02      	ldr	r3, [pc, #8]	; (80005ec <puts+0xc>)
 80005e2:	4601      	mov	r1, r0
 80005e4:	6818      	ldr	r0, [r3, #0]
 80005e6:	f7ff bfa7 	b.w	8000538 <_puts_r>
 80005ea:	bf00      	nop
 80005ec:	20000058 	.word	0x20000058

080005f0 <__sread>:
 80005f0:	b510      	push	{r4, lr}
 80005f2:	460c      	mov	r4, r1
 80005f4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80005f8:	f000 f8fc 	bl	80007f4 <_read_r>
 80005fc:	2800      	cmp	r0, #0
 80005fe:	bfab      	itete	ge
 8000600:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8000602:	89a3      	ldrhlt	r3, [r4, #12]
 8000604:	181b      	addge	r3, r3, r0
 8000606:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800060a:	bfac      	ite	ge
 800060c:	6563      	strge	r3, [r4, #84]	; 0x54
 800060e:	81a3      	strhlt	r3, [r4, #12]
 8000610:	bd10      	pop	{r4, pc}

08000612 <__swrite>:
 8000612:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000616:	461f      	mov	r7, r3
 8000618:	898b      	ldrh	r3, [r1, #12]
 800061a:	05db      	lsls	r3, r3, #23
 800061c:	4605      	mov	r5, r0
 800061e:	460c      	mov	r4, r1
 8000620:	4616      	mov	r6, r2
 8000622:	d505      	bpl.n	8000630 <__swrite+0x1e>
 8000624:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000628:	2302      	movs	r3, #2
 800062a:	2200      	movs	r2, #0
 800062c:	f000 f8d0 	bl	80007d0 <_lseek_r>
 8000630:	89a3      	ldrh	r3, [r4, #12]
 8000632:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000636:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800063a:	81a3      	strh	r3, [r4, #12]
 800063c:	4632      	mov	r2, r6
 800063e:	463b      	mov	r3, r7
 8000640:	4628      	mov	r0, r5
 8000642:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8000646:	f000 b8e7 	b.w	8000818 <_write_r>

0800064a <__sseek>:
 800064a:	b510      	push	{r4, lr}
 800064c:	460c      	mov	r4, r1
 800064e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000652:	f000 f8bd 	bl	80007d0 <_lseek_r>
 8000656:	1c43      	adds	r3, r0, #1
 8000658:	89a3      	ldrh	r3, [r4, #12]
 800065a:	bf15      	itete	ne
 800065c:	6560      	strne	r0, [r4, #84]	; 0x54
 800065e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8000662:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8000666:	81a3      	strheq	r3, [r4, #12]
 8000668:	bf18      	it	ne
 800066a:	81a3      	strhne	r3, [r4, #12]
 800066c:	bd10      	pop	{r4, pc}

0800066e <__sclose>:
 800066e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000672:	f000 b89d 	b.w	80007b0 <_close_r>

08000676 <__swbuf_r>:
 8000676:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000678:	460e      	mov	r6, r1
 800067a:	4614      	mov	r4, r2
 800067c:	4605      	mov	r5, r0
 800067e:	b118      	cbz	r0, 8000688 <__swbuf_r+0x12>
 8000680:	6a03      	ldr	r3, [r0, #32]
 8000682:	b90b      	cbnz	r3, 8000688 <__swbuf_r+0x12>
 8000684:	f7ff ff22 	bl	80004cc <__sinit>
 8000688:	69a3      	ldr	r3, [r4, #24]
 800068a:	60a3      	str	r3, [r4, #8]
 800068c:	89a3      	ldrh	r3, [r4, #12]
 800068e:	071a      	lsls	r2, r3, #28
 8000690:	d525      	bpl.n	80006de <__swbuf_r+0x68>
 8000692:	6923      	ldr	r3, [r4, #16]
 8000694:	b31b      	cbz	r3, 80006de <__swbuf_r+0x68>
 8000696:	6823      	ldr	r3, [r4, #0]
 8000698:	6922      	ldr	r2, [r4, #16]
 800069a:	1a98      	subs	r0, r3, r2
 800069c:	6963      	ldr	r3, [r4, #20]
 800069e:	b2f6      	uxtb	r6, r6
 80006a0:	4283      	cmp	r3, r0
 80006a2:	4637      	mov	r7, r6
 80006a4:	dc04      	bgt.n	80006b0 <__swbuf_r+0x3a>
 80006a6:	4621      	mov	r1, r4
 80006a8:	4628      	mov	r0, r5
 80006aa:	f000 fa73 	bl	8000b94 <_fflush_r>
 80006ae:	b9e0      	cbnz	r0, 80006ea <__swbuf_r+0x74>
 80006b0:	68a3      	ldr	r3, [r4, #8]
 80006b2:	3b01      	subs	r3, #1
 80006b4:	60a3      	str	r3, [r4, #8]
 80006b6:	6823      	ldr	r3, [r4, #0]
 80006b8:	1c5a      	adds	r2, r3, #1
 80006ba:	6022      	str	r2, [r4, #0]
 80006bc:	701e      	strb	r6, [r3, #0]
 80006be:	6962      	ldr	r2, [r4, #20]
 80006c0:	1c43      	adds	r3, r0, #1
 80006c2:	429a      	cmp	r2, r3
 80006c4:	d004      	beq.n	80006d0 <__swbuf_r+0x5a>
 80006c6:	89a3      	ldrh	r3, [r4, #12]
 80006c8:	07db      	lsls	r3, r3, #31
 80006ca:	d506      	bpl.n	80006da <__swbuf_r+0x64>
 80006cc:	2e0a      	cmp	r6, #10
 80006ce:	d104      	bne.n	80006da <__swbuf_r+0x64>
 80006d0:	4621      	mov	r1, r4
 80006d2:	4628      	mov	r0, r5
 80006d4:	f000 fa5e 	bl	8000b94 <_fflush_r>
 80006d8:	b938      	cbnz	r0, 80006ea <__swbuf_r+0x74>
 80006da:	4638      	mov	r0, r7
 80006dc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80006de:	4621      	mov	r1, r4
 80006e0:	4628      	mov	r0, r5
 80006e2:	f000 f805 	bl	80006f0 <__swsetup_r>
 80006e6:	2800      	cmp	r0, #0
 80006e8:	d0d5      	beq.n	8000696 <__swbuf_r+0x20>
 80006ea:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 80006ee:	e7f4      	b.n	80006da <__swbuf_r+0x64>

080006f0 <__swsetup_r>:
 80006f0:	b538      	push	{r3, r4, r5, lr}
 80006f2:	4b2a      	ldr	r3, [pc, #168]	; (800079c <__swsetup_r+0xac>)
 80006f4:	4605      	mov	r5, r0
 80006f6:	6818      	ldr	r0, [r3, #0]
 80006f8:	460c      	mov	r4, r1
 80006fa:	b118      	cbz	r0, 8000704 <__swsetup_r+0x14>
 80006fc:	6a03      	ldr	r3, [r0, #32]
 80006fe:	b90b      	cbnz	r3, 8000704 <__swsetup_r+0x14>
 8000700:	f7ff fee4 	bl	80004cc <__sinit>
 8000704:	89a3      	ldrh	r3, [r4, #12]
 8000706:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800070a:	0718      	lsls	r0, r3, #28
 800070c:	d422      	bmi.n	8000754 <__swsetup_r+0x64>
 800070e:	06d9      	lsls	r1, r3, #27
 8000710:	d407      	bmi.n	8000722 <__swsetup_r+0x32>
 8000712:	2309      	movs	r3, #9
 8000714:	602b      	str	r3, [r5, #0]
 8000716:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800071a:	81a3      	strh	r3, [r4, #12]
 800071c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000720:	e034      	b.n	800078c <__swsetup_r+0x9c>
 8000722:	0758      	lsls	r0, r3, #29
 8000724:	d512      	bpl.n	800074c <__swsetup_r+0x5c>
 8000726:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000728:	b141      	cbz	r1, 800073c <__swsetup_r+0x4c>
 800072a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800072e:	4299      	cmp	r1, r3
 8000730:	d002      	beq.n	8000738 <__swsetup_r+0x48>
 8000732:	4628      	mov	r0, r5
 8000734:	f000 f8b0 	bl	8000898 <_free_r>
 8000738:	2300      	movs	r3, #0
 800073a:	6363      	str	r3, [r4, #52]	; 0x34
 800073c:	89a3      	ldrh	r3, [r4, #12]
 800073e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8000742:	81a3      	strh	r3, [r4, #12]
 8000744:	2300      	movs	r3, #0
 8000746:	6063      	str	r3, [r4, #4]
 8000748:	6923      	ldr	r3, [r4, #16]
 800074a:	6023      	str	r3, [r4, #0]
 800074c:	89a3      	ldrh	r3, [r4, #12]
 800074e:	f043 0308 	orr.w	r3, r3, #8
 8000752:	81a3      	strh	r3, [r4, #12]
 8000754:	6923      	ldr	r3, [r4, #16]
 8000756:	b94b      	cbnz	r3, 800076c <__swsetup_r+0x7c>
 8000758:	89a3      	ldrh	r3, [r4, #12]
 800075a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800075e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000762:	d003      	beq.n	800076c <__swsetup_r+0x7c>
 8000764:	4621      	mov	r1, r4
 8000766:	4628      	mov	r0, r5
 8000768:	f000 fa62 	bl	8000c30 <__smakebuf_r>
 800076c:	89a0      	ldrh	r0, [r4, #12]
 800076e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8000772:	f010 0301 	ands.w	r3, r0, #1
 8000776:	d00a      	beq.n	800078e <__swsetup_r+0x9e>
 8000778:	2300      	movs	r3, #0
 800077a:	60a3      	str	r3, [r4, #8]
 800077c:	6963      	ldr	r3, [r4, #20]
 800077e:	425b      	negs	r3, r3
 8000780:	61a3      	str	r3, [r4, #24]
 8000782:	6923      	ldr	r3, [r4, #16]
 8000784:	b943      	cbnz	r3, 8000798 <__swsetup_r+0xa8>
 8000786:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800078a:	d1c4      	bne.n	8000716 <__swsetup_r+0x26>
 800078c:	bd38      	pop	{r3, r4, r5, pc}
 800078e:	0781      	lsls	r1, r0, #30
 8000790:	bf58      	it	pl
 8000792:	6963      	ldrpl	r3, [r4, #20]
 8000794:	60a3      	str	r3, [r4, #8]
 8000796:	e7f4      	b.n	8000782 <__swsetup_r+0x92>
 8000798:	2000      	movs	r0, #0
 800079a:	e7f7      	b.n	800078c <__swsetup_r+0x9c>
 800079c:	20000058 	.word	0x20000058

080007a0 <memset>:
 80007a0:	4402      	add	r2, r0
 80007a2:	4603      	mov	r3, r0
 80007a4:	4293      	cmp	r3, r2
 80007a6:	d100      	bne.n	80007aa <memset+0xa>
 80007a8:	4770      	bx	lr
 80007aa:	f803 1b01 	strb.w	r1, [r3], #1
 80007ae:	e7f9      	b.n	80007a4 <memset+0x4>

080007b0 <_close_r>:
 80007b0:	b538      	push	{r3, r4, r5, lr}
 80007b2:	4d06      	ldr	r5, [pc, #24]	; (80007cc <_close_r+0x1c>)
 80007b4:	2300      	movs	r3, #0
 80007b6:	4604      	mov	r4, r0
 80007b8:	4608      	mov	r0, r1
 80007ba:	602b      	str	r3, [r5, #0]
 80007bc:	f7ff fd65 	bl	800028a <_close>
 80007c0:	1c43      	adds	r3, r0, #1
 80007c2:	d102      	bne.n	80007ca <_close_r+0x1a>
 80007c4:	682b      	ldr	r3, [r5, #0]
 80007c6:	b103      	cbz	r3, 80007ca <_close_r+0x1a>
 80007c8:	6023      	str	r3, [r4, #0]
 80007ca:	bd38      	pop	{r3, r4, r5, pc}
 80007cc:	200001b8 	.word	0x200001b8

080007d0 <_lseek_r>:
 80007d0:	b538      	push	{r3, r4, r5, lr}
 80007d2:	4d07      	ldr	r5, [pc, #28]	; (80007f0 <_lseek_r+0x20>)
 80007d4:	4604      	mov	r4, r0
 80007d6:	4608      	mov	r0, r1
 80007d8:	4611      	mov	r1, r2
 80007da:	2200      	movs	r2, #0
 80007dc:	602a      	str	r2, [r5, #0]
 80007de:	461a      	mov	r2, r3
 80007e0:	f7ff fd7a 	bl	80002d8 <_lseek>
 80007e4:	1c43      	adds	r3, r0, #1
 80007e6:	d102      	bne.n	80007ee <_lseek_r+0x1e>
 80007e8:	682b      	ldr	r3, [r5, #0]
 80007ea:	b103      	cbz	r3, 80007ee <_lseek_r+0x1e>
 80007ec:	6023      	str	r3, [r4, #0]
 80007ee:	bd38      	pop	{r3, r4, r5, pc}
 80007f0:	200001b8 	.word	0x200001b8

080007f4 <_read_r>:
 80007f4:	b538      	push	{r3, r4, r5, lr}
 80007f6:	4d07      	ldr	r5, [pc, #28]	; (8000814 <_read_r+0x20>)
 80007f8:	4604      	mov	r4, r0
 80007fa:	4608      	mov	r0, r1
 80007fc:	4611      	mov	r1, r2
 80007fe:	2200      	movs	r2, #0
 8000800:	602a      	str	r2, [r5, #0]
 8000802:	461a      	mov	r2, r3
 8000804:	f7ff fd08 	bl	8000218 <_read>
 8000808:	1c43      	adds	r3, r0, #1
 800080a:	d102      	bne.n	8000812 <_read_r+0x1e>
 800080c:	682b      	ldr	r3, [r5, #0]
 800080e:	b103      	cbz	r3, 8000812 <_read_r+0x1e>
 8000810:	6023      	str	r3, [r4, #0]
 8000812:	bd38      	pop	{r3, r4, r5, pc}
 8000814:	200001b8 	.word	0x200001b8

08000818 <_write_r>:
 8000818:	b538      	push	{r3, r4, r5, lr}
 800081a:	4d07      	ldr	r5, [pc, #28]	; (8000838 <_write_r+0x20>)
 800081c:	4604      	mov	r4, r0
 800081e:	4608      	mov	r0, r1
 8000820:	4611      	mov	r1, r2
 8000822:	2200      	movs	r2, #0
 8000824:	602a      	str	r2, [r5, #0]
 8000826:	461a      	mov	r2, r3
 8000828:	f7ff fd13 	bl	8000252 <_write>
 800082c:	1c43      	adds	r3, r0, #1
 800082e:	d102      	bne.n	8000836 <_write_r+0x1e>
 8000830:	682b      	ldr	r3, [r5, #0]
 8000832:	b103      	cbz	r3, 8000836 <_write_r+0x1e>
 8000834:	6023      	str	r3, [r4, #0]
 8000836:	bd38      	pop	{r3, r4, r5, pc}
 8000838:	200001b8 	.word	0x200001b8

0800083c <__errno>:
 800083c:	4b01      	ldr	r3, [pc, #4]	; (8000844 <__errno+0x8>)
 800083e:	6818      	ldr	r0, [r3, #0]
 8000840:	4770      	bx	lr
 8000842:	bf00      	nop
 8000844:	20000058 	.word	0x20000058

08000848 <__libc_init_array>:
 8000848:	b570      	push	{r4, r5, r6, lr}
 800084a:	4d0d      	ldr	r5, [pc, #52]	; (8000880 <__libc_init_array+0x38>)
 800084c:	4c0d      	ldr	r4, [pc, #52]	; (8000884 <__libc_init_array+0x3c>)
 800084e:	1b64      	subs	r4, r4, r5
 8000850:	10a4      	asrs	r4, r4, #2
 8000852:	2600      	movs	r6, #0
 8000854:	42a6      	cmp	r6, r4
 8000856:	d109      	bne.n	800086c <__libc_init_array+0x24>
 8000858:	4d0b      	ldr	r5, [pc, #44]	; (8000888 <__libc_init_array+0x40>)
 800085a:	4c0c      	ldr	r4, [pc, #48]	; (800088c <__libc_init_array+0x44>)
 800085c:	f000 fa56 	bl	8000d0c <_init>
 8000860:	1b64      	subs	r4, r4, r5
 8000862:	10a4      	asrs	r4, r4, #2
 8000864:	2600      	movs	r6, #0
 8000866:	42a6      	cmp	r6, r4
 8000868:	d105      	bne.n	8000876 <__libc_init_array+0x2e>
 800086a:	bd70      	pop	{r4, r5, r6, pc}
 800086c:	f855 3b04 	ldr.w	r3, [r5], #4
 8000870:	4798      	blx	r3
 8000872:	3601      	adds	r6, #1
 8000874:	e7ee      	b.n	8000854 <__libc_init_array+0xc>
 8000876:	f855 3b04 	ldr.w	r3, [r5], #4
 800087a:	4798      	blx	r3
 800087c:	3601      	adds	r6, #1
 800087e:	e7f2      	b.n	8000866 <__libc_init_array+0x1e>
 8000880:	08000d34 	.word	0x08000d34
 8000884:	08000d34 	.word	0x08000d34
 8000888:	08000d34 	.word	0x08000d34
 800088c:	08000d38 	.word	0x08000d38

08000890 <__retarget_lock_init_recursive>:
 8000890:	4770      	bx	lr

08000892 <__retarget_lock_acquire_recursive>:
 8000892:	4770      	bx	lr

08000894 <__retarget_lock_release_recursive>:
 8000894:	4770      	bx	lr
	...

08000898 <_free_r>:
 8000898:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800089a:	2900      	cmp	r1, #0
 800089c:	d044      	beq.n	8000928 <_free_r+0x90>
 800089e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80008a2:	9001      	str	r0, [sp, #4]
 80008a4:	2b00      	cmp	r3, #0
 80008a6:	f1a1 0404 	sub.w	r4, r1, #4
 80008aa:	bfb8      	it	lt
 80008ac:	18e4      	addlt	r4, r4, r3
 80008ae:	f000 f8df 	bl	8000a70 <__malloc_lock>
 80008b2:	4a1e      	ldr	r2, [pc, #120]	; (800092c <_free_r+0x94>)
 80008b4:	9801      	ldr	r0, [sp, #4]
 80008b6:	6813      	ldr	r3, [r2, #0]
 80008b8:	b933      	cbnz	r3, 80008c8 <_free_r+0x30>
 80008ba:	6063      	str	r3, [r4, #4]
 80008bc:	6014      	str	r4, [r2, #0]
 80008be:	b003      	add	sp, #12
 80008c0:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80008c4:	f000 b8da 	b.w	8000a7c <__malloc_unlock>
 80008c8:	42a3      	cmp	r3, r4
 80008ca:	d908      	bls.n	80008de <_free_r+0x46>
 80008cc:	6825      	ldr	r5, [r4, #0]
 80008ce:	1961      	adds	r1, r4, r5
 80008d0:	428b      	cmp	r3, r1
 80008d2:	bf01      	itttt	eq
 80008d4:	6819      	ldreq	r1, [r3, #0]
 80008d6:	685b      	ldreq	r3, [r3, #4]
 80008d8:	1949      	addeq	r1, r1, r5
 80008da:	6021      	streq	r1, [r4, #0]
 80008dc:	e7ed      	b.n	80008ba <_free_r+0x22>
 80008de:	461a      	mov	r2, r3
 80008e0:	685b      	ldr	r3, [r3, #4]
 80008e2:	b10b      	cbz	r3, 80008e8 <_free_r+0x50>
 80008e4:	42a3      	cmp	r3, r4
 80008e6:	d9fa      	bls.n	80008de <_free_r+0x46>
 80008e8:	6811      	ldr	r1, [r2, #0]
 80008ea:	1855      	adds	r5, r2, r1
 80008ec:	42a5      	cmp	r5, r4
 80008ee:	d10b      	bne.n	8000908 <_free_r+0x70>
 80008f0:	6824      	ldr	r4, [r4, #0]
 80008f2:	4421      	add	r1, r4
 80008f4:	1854      	adds	r4, r2, r1
 80008f6:	42a3      	cmp	r3, r4
 80008f8:	6011      	str	r1, [r2, #0]
 80008fa:	d1e0      	bne.n	80008be <_free_r+0x26>
 80008fc:	681c      	ldr	r4, [r3, #0]
 80008fe:	685b      	ldr	r3, [r3, #4]
 8000900:	6053      	str	r3, [r2, #4]
 8000902:	440c      	add	r4, r1
 8000904:	6014      	str	r4, [r2, #0]
 8000906:	e7da      	b.n	80008be <_free_r+0x26>
 8000908:	d902      	bls.n	8000910 <_free_r+0x78>
 800090a:	230c      	movs	r3, #12
 800090c:	6003      	str	r3, [r0, #0]
 800090e:	e7d6      	b.n	80008be <_free_r+0x26>
 8000910:	6825      	ldr	r5, [r4, #0]
 8000912:	1961      	adds	r1, r4, r5
 8000914:	428b      	cmp	r3, r1
 8000916:	bf04      	itt	eq
 8000918:	6819      	ldreq	r1, [r3, #0]
 800091a:	685b      	ldreq	r3, [r3, #4]
 800091c:	6063      	str	r3, [r4, #4]
 800091e:	bf04      	itt	eq
 8000920:	1949      	addeq	r1, r1, r5
 8000922:	6021      	streq	r1, [r4, #0]
 8000924:	6054      	str	r4, [r2, #4]
 8000926:	e7ca      	b.n	80008be <_free_r+0x26>
 8000928:	b003      	add	sp, #12
 800092a:	bd30      	pop	{r4, r5, pc}
 800092c:	200001c0 	.word	0x200001c0

08000930 <sbrk_aligned>:
 8000930:	b570      	push	{r4, r5, r6, lr}
 8000932:	4e0e      	ldr	r6, [pc, #56]	; (800096c <sbrk_aligned+0x3c>)
 8000934:	460c      	mov	r4, r1
 8000936:	6831      	ldr	r1, [r6, #0]
 8000938:	4605      	mov	r5, r0
 800093a:	b911      	cbnz	r1, 8000942 <sbrk_aligned+0x12>
 800093c:	f000 f9d6 	bl	8000cec <_sbrk_r>
 8000940:	6030      	str	r0, [r6, #0]
 8000942:	4621      	mov	r1, r4
 8000944:	4628      	mov	r0, r5
 8000946:	f000 f9d1 	bl	8000cec <_sbrk_r>
 800094a:	1c43      	adds	r3, r0, #1
 800094c:	d00a      	beq.n	8000964 <sbrk_aligned+0x34>
 800094e:	1cc4      	adds	r4, r0, #3
 8000950:	f024 0403 	bic.w	r4, r4, #3
 8000954:	42a0      	cmp	r0, r4
 8000956:	d007      	beq.n	8000968 <sbrk_aligned+0x38>
 8000958:	1a21      	subs	r1, r4, r0
 800095a:	4628      	mov	r0, r5
 800095c:	f000 f9c6 	bl	8000cec <_sbrk_r>
 8000960:	3001      	adds	r0, #1
 8000962:	d101      	bne.n	8000968 <sbrk_aligned+0x38>
 8000964:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
 8000968:	4620      	mov	r0, r4
 800096a:	bd70      	pop	{r4, r5, r6, pc}
 800096c:	200001c4 	.word	0x200001c4

08000970 <_malloc_r>:
 8000970:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000974:	1ccd      	adds	r5, r1, #3
 8000976:	f025 0503 	bic.w	r5, r5, #3
 800097a:	3508      	adds	r5, #8
 800097c:	2d0c      	cmp	r5, #12
 800097e:	bf38      	it	cc
 8000980:	250c      	movcc	r5, #12
 8000982:	2d00      	cmp	r5, #0
 8000984:	4607      	mov	r7, r0
 8000986:	db01      	blt.n	800098c <_malloc_r+0x1c>
 8000988:	42a9      	cmp	r1, r5
 800098a:	d905      	bls.n	8000998 <_malloc_r+0x28>
 800098c:	230c      	movs	r3, #12
 800098e:	603b      	str	r3, [r7, #0]
 8000990:	2600      	movs	r6, #0
 8000992:	4630      	mov	r0, r6
 8000994:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000998:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8000a6c <_malloc_r+0xfc>
 800099c:	f000 f868 	bl	8000a70 <__malloc_lock>
 80009a0:	f8d8 3000 	ldr.w	r3, [r8]
 80009a4:	461c      	mov	r4, r3
 80009a6:	bb5c      	cbnz	r4, 8000a00 <_malloc_r+0x90>
 80009a8:	4629      	mov	r1, r5
 80009aa:	4638      	mov	r0, r7
 80009ac:	f7ff ffc0 	bl	8000930 <sbrk_aligned>
 80009b0:	1c43      	adds	r3, r0, #1
 80009b2:	4604      	mov	r4, r0
 80009b4:	d155      	bne.n	8000a62 <_malloc_r+0xf2>
 80009b6:	f8d8 4000 	ldr.w	r4, [r8]
 80009ba:	4626      	mov	r6, r4
 80009bc:	2e00      	cmp	r6, #0
 80009be:	d145      	bne.n	8000a4c <_malloc_r+0xdc>
 80009c0:	2c00      	cmp	r4, #0
 80009c2:	d048      	beq.n	8000a56 <_malloc_r+0xe6>
 80009c4:	6823      	ldr	r3, [r4, #0]
 80009c6:	4631      	mov	r1, r6
 80009c8:	4638      	mov	r0, r7
 80009ca:	eb04 0903 	add.w	r9, r4, r3
 80009ce:	f000 f98d 	bl	8000cec <_sbrk_r>
 80009d2:	4581      	cmp	r9, r0
 80009d4:	d13f      	bne.n	8000a56 <_malloc_r+0xe6>
 80009d6:	6821      	ldr	r1, [r4, #0]
 80009d8:	1a6d      	subs	r5, r5, r1
 80009da:	4629      	mov	r1, r5
 80009dc:	4638      	mov	r0, r7
 80009de:	f7ff ffa7 	bl	8000930 <sbrk_aligned>
 80009e2:	3001      	adds	r0, #1
 80009e4:	d037      	beq.n	8000a56 <_malloc_r+0xe6>
 80009e6:	6823      	ldr	r3, [r4, #0]
 80009e8:	442b      	add	r3, r5
 80009ea:	6023      	str	r3, [r4, #0]
 80009ec:	f8d8 3000 	ldr.w	r3, [r8]
 80009f0:	2b00      	cmp	r3, #0
 80009f2:	d038      	beq.n	8000a66 <_malloc_r+0xf6>
 80009f4:	685a      	ldr	r2, [r3, #4]
 80009f6:	42a2      	cmp	r2, r4
 80009f8:	d12b      	bne.n	8000a52 <_malloc_r+0xe2>
 80009fa:	2200      	movs	r2, #0
 80009fc:	605a      	str	r2, [r3, #4]
 80009fe:	e00f      	b.n	8000a20 <_malloc_r+0xb0>
 8000a00:	6822      	ldr	r2, [r4, #0]
 8000a02:	1b52      	subs	r2, r2, r5
 8000a04:	d41f      	bmi.n	8000a46 <_malloc_r+0xd6>
 8000a06:	2a0b      	cmp	r2, #11
 8000a08:	d917      	bls.n	8000a3a <_malloc_r+0xca>
 8000a0a:	1961      	adds	r1, r4, r5
 8000a0c:	42a3      	cmp	r3, r4
 8000a0e:	6025      	str	r5, [r4, #0]
 8000a10:	bf18      	it	ne
 8000a12:	6059      	strne	r1, [r3, #4]
 8000a14:	6863      	ldr	r3, [r4, #4]
 8000a16:	bf08      	it	eq
 8000a18:	f8c8 1000 	streq.w	r1, [r8]
 8000a1c:	5162      	str	r2, [r4, r5]
 8000a1e:	604b      	str	r3, [r1, #4]
 8000a20:	4638      	mov	r0, r7
 8000a22:	f104 060b 	add.w	r6, r4, #11
 8000a26:	f000 f829 	bl	8000a7c <__malloc_unlock>
 8000a2a:	f026 0607 	bic.w	r6, r6, #7
 8000a2e:	1d23      	adds	r3, r4, #4
 8000a30:	1af2      	subs	r2, r6, r3
 8000a32:	d0ae      	beq.n	8000992 <_malloc_r+0x22>
 8000a34:	1b9b      	subs	r3, r3, r6
 8000a36:	50a3      	str	r3, [r4, r2]
 8000a38:	e7ab      	b.n	8000992 <_malloc_r+0x22>
 8000a3a:	42a3      	cmp	r3, r4
 8000a3c:	6862      	ldr	r2, [r4, #4]
 8000a3e:	d1dd      	bne.n	80009fc <_malloc_r+0x8c>
 8000a40:	f8c8 2000 	str.w	r2, [r8]
 8000a44:	e7ec      	b.n	8000a20 <_malloc_r+0xb0>
 8000a46:	4623      	mov	r3, r4
 8000a48:	6864      	ldr	r4, [r4, #4]
 8000a4a:	e7ac      	b.n	80009a6 <_malloc_r+0x36>
 8000a4c:	4634      	mov	r4, r6
 8000a4e:	6876      	ldr	r6, [r6, #4]
 8000a50:	e7b4      	b.n	80009bc <_malloc_r+0x4c>
 8000a52:	4613      	mov	r3, r2
 8000a54:	e7cc      	b.n	80009f0 <_malloc_r+0x80>
 8000a56:	230c      	movs	r3, #12
 8000a58:	603b      	str	r3, [r7, #0]
 8000a5a:	4638      	mov	r0, r7
 8000a5c:	f000 f80e 	bl	8000a7c <__malloc_unlock>
 8000a60:	e797      	b.n	8000992 <_malloc_r+0x22>
 8000a62:	6025      	str	r5, [r4, #0]
 8000a64:	e7dc      	b.n	8000a20 <_malloc_r+0xb0>
 8000a66:	605b      	str	r3, [r3, #4]
 8000a68:	deff      	udf	#255	; 0xff
 8000a6a:	bf00      	nop
 8000a6c:	200001c0 	.word	0x200001c0

08000a70 <__malloc_lock>:
 8000a70:	4801      	ldr	r0, [pc, #4]	; (8000a78 <__malloc_lock+0x8>)
 8000a72:	f7ff bf0e 	b.w	8000892 <__retarget_lock_acquire_recursive>
 8000a76:	bf00      	nop
 8000a78:	200001bc 	.word	0x200001bc

08000a7c <__malloc_unlock>:
 8000a7c:	4801      	ldr	r0, [pc, #4]	; (8000a84 <__malloc_unlock+0x8>)
 8000a7e:	f7ff bf09 	b.w	8000894 <__retarget_lock_release_recursive>
 8000a82:	bf00      	nop
 8000a84:	200001bc 	.word	0x200001bc

08000a88 <__sflush_r>:
 8000a88:	898a      	ldrh	r2, [r1, #12]
 8000a8a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000a8e:	4605      	mov	r5, r0
 8000a90:	0710      	lsls	r0, r2, #28
 8000a92:	460c      	mov	r4, r1
 8000a94:	d458      	bmi.n	8000b48 <__sflush_r+0xc0>
 8000a96:	684b      	ldr	r3, [r1, #4]
 8000a98:	2b00      	cmp	r3, #0
 8000a9a:	dc05      	bgt.n	8000aa8 <__sflush_r+0x20>
 8000a9c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000a9e:	2b00      	cmp	r3, #0
 8000aa0:	dc02      	bgt.n	8000aa8 <__sflush_r+0x20>
 8000aa2:	2000      	movs	r0, #0
 8000aa4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000aa8:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000aaa:	2e00      	cmp	r6, #0
 8000aac:	d0f9      	beq.n	8000aa2 <__sflush_r+0x1a>
 8000aae:	2300      	movs	r3, #0
 8000ab0:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8000ab4:	682f      	ldr	r7, [r5, #0]
 8000ab6:	6a21      	ldr	r1, [r4, #32]
 8000ab8:	602b      	str	r3, [r5, #0]
 8000aba:	d032      	beq.n	8000b22 <__sflush_r+0x9a>
 8000abc:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000abe:	89a3      	ldrh	r3, [r4, #12]
 8000ac0:	075a      	lsls	r2, r3, #29
 8000ac2:	d505      	bpl.n	8000ad0 <__sflush_r+0x48>
 8000ac4:	6863      	ldr	r3, [r4, #4]
 8000ac6:	1ac0      	subs	r0, r0, r3
 8000ac8:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000aca:	b10b      	cbz	r3, 8000ad0 <__sflush_r+0x48>
 8000acc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000ace:	1ac0      	subs	r0, r0, r3
 8000ad0:	2300      	movs	r3, #0
 8000ad2:	4602      	mov	r2, r0
 8000ad4:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000ad6:	6a21      	ldr	r1, [r4, #32]
 8000ad8:	4628      	mov	r0, r5
 8000ada:	47b0      	blx	r6
 8000adc:	1c43      	adds	r3, r0, #1
 8000ade:	89a3      	ldrh	r3, [r4, #12]
 8000ae0:	d106      	bne.n	8000af0 <__sflush_r+0x68>
 8000ae2:	6829      	ldr	r1, [r5, #0]
 8000ae4:	291d      	cmp	r1, #29
 8000ae6:	d82b      	bhi.n	8000b40 <__sflush_r+0xb8>
 8000ae8:	4a29      	ldr	r2, [pc, #164]	; (8000b90 <__sflush_r+0x108>)
 8000aea:	410a      	asrs	r2, r1
 8000aec:	07d6      	lsls	r6, r2, #31
 8000aee:	d427      	bmi.n	8000b40 <__sflush_r+0xb8>
 8000af0:	2200      	movs	r2, #0
 8000af2:	6062      	str	r2, [r4, #4]
 8000af4:	04d9      	lsls	r1, r3, #19
 8000af6:	6922      	ldr	r2, [r4, #16]
 8000af8:	6022      	str	r2, [r4, #0]
 8000afa:	d504      	bpl.n	8000b06 <__sflush_r+0x7e>
 8000afc:	1c42      	adds	r2, r0, #1
 8000afe:	d101      	bne.n	8000b04 <__sflush_r+0x7c>
 8000b00:	682b      	ldr	r3, [r5, #0]
 8000b02:	b903      	cbnz	r3, 8000b06 <__sflush_r+0x7e>
 8000b04:	6560      	str	r0, [r4, #84]	; 0x54
 8000b06:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8000b08:	602f      	str	r7, [r5, #0]
 8000b0a:	2900      	cmp	r1, #0
 8000b0c:	d0c9      	beq.n	8000aa2 <__sflush_r+0x1a>
 8000b0e:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000b12:	4299      	cmp	r1, r3
 8000b14:	d002      	beq.n	8000b1c <__sflush_r+0x94>
 8000b16:	4628      	mov	r0, r5
 8000b18:	f7ff febe 	bl	8000898 <_free_r>
 8000b1c:	2000      	movs	r0, #0
 8000b1e:	6360      	str	r0, [r4, #52]	; 0x34
 8000b20:	e7c0      	b.n	8000aa4 <__sflush_r+0x1c>
 8000b22:	2301      	movs	r3, #1
 8000b24:	4628      	mov	r0, r5
 8000b26:	47b0      	blx	r6
 8000b28:	1c41      	adds	r1, r0, #1
 8000b2a:	d1c8      	bne.n	8000abe <__sflush_r+0x36>
 8000b2c:	682b      	ldr	r3, [r5, #0]
 8000b2e:	2b00      	cmp	r3, #0
 8000b30:	d0c5      	beq.n	8000abe <__sflush_r+0x36>
 8000b32:	2b1d      	cmp	r3, #29
 8000b34:	d001      	beq.n	8000b3a <__sflush_r+0xb2>
 8000b36:	2b16      	cmp	r3, #22
 8000b38:	d101      	bne.n	8000b3e <__sflush_r+0xb6>
 8000b3a:	602f      	str	r7, [r5, #0]
 8000b3c:	e7b1      	b.n	8000aa2 <__sflush_r+0x1a>
 8000b3e:	89a3      	ldrh	r3, [r4, #12]
 8000b40:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b44:	81a3      	strh	r3, [r4, #12]
 8000b46:	e7ad      	b.n	8000aa4 <__sflush_r+0x1c>
 8000b48:	690f      	ldr	r7, [r1, #16]
 8000b4a:	2f00      	cmp	r7, #0
 8000b4c:	d0a9      	beq.n	8000aa2 <__sflush_r+0x1a>
 8000b4e:	0793      	lsls	r3, r2, #30
 8000b50:	680e      	ldr	r6, [r1, #0]
 8000b52:	bf08      	it	eq
 8000b54:	694b      	ldreq	r3, [r1, #20]
 8000b56:	600f      	str	r7, [r1, #0]
 8000b58:	bf18      	it	ne
 8000b5a:	2300      	movne	r3, #0
 8000b5c:	eba6 0807 	sub.w	r8, r6, r7
 8000b60:	608b      	str	r3, [r1, #8]
 8000b62:	f1b8 0f00 	cmp.w	r8, #0
 8000b66:	dd9c      	ble.n	8000aa2 <__sflush_r+0x1a>
 8000b68:	6a21      	ldr	r1, [r4, #32]
 8000b6a:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8000b6c:	4643      	mov	r3, r8
 8000b6e:	463a      	mov	r2, r7
 8000b70:	4628      	mov	r0, r5
 8000b72:	47b0      	blx	r6
 8000b74:	2800      	cmp	r0, #0
 8000b76:	dc06      	bgt.n	8000b86 <__sflush_r+0xfe>
 8000b78:	89a3      	ldrh	r3, [r4, #12]
 8000b7a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000b7e:	81a3      	strh	r3, [r4, #12]
 8000b80:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000b84:	e78e      	b.n	8000aa4 <__sflush_r+0x1c>
 8000b86:	4407      	add	r7, r0
 8000b88:	eba8 0800 	sub.w	r8, r8, r0
 8000b8c:	e7e9      	b.n	8000b62 <__sflush_r+0xda>
 8000b8e:	bf00      	nop
 8000b90:	dfbffffe 	.word	0xdfbffffe

08000b94 <_fflush_r>:
 8000b94:	b538      	push	{r3, r4, r5, lr}
 8000b96:	690b      	ldr	r3, [r1, #16]
 8000b98:	4605      	mov	r5, r0
 8000b9a:	460c      	mov	r4, r1
 8000b9c:	b913      	cbnz	r3, 8000ba4 <_fflush_r+0x10>
 8000b9e:	2500      	movs	r5, #0
 8000ba0:	4628      	mov	r0, r5
 8000ba2:	bd38      	pop	{r3, r4, r5, pc}
 8000ba4:	b118      	cbz	r0, 8000bae <_fflush_r+0x1a>
 8000ba6:	6a03      	ldr	r3, [r0, #32]
 8000ba8:	b90b      	cbnz	r3, 8000bae <_fflush_r+0x1a>
 8000baa:	f7ff fc8f 	bl	80004cc <__sinit>
 8000bae:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000bb2:	2b00      	cmp	r3, #0
 8000bb4:	d0f3      	beq.n	8000b9e <_fflush_r+0xa>
 8000bb6:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000bb8:	07d0      	lsls	r0, r2, #31
 8000bba:	d404      	bmi.n	8000bc6 <_fflush_r+0x32>
 8000bbc:	0599      	lsls	r1, r3, #22
 8000bbe:	d402      	bmi.n	8000bc6 <_fflush_r+0x32>
 8000bc0:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bc2:	f7ff fe66 	bl	8000892 <__retarget_lock_acquire_recursive>
 8000bc6:	4628      	mov	r0, r5
 8000bc8:	4621      	mov	r1, r4
 8000bca:	f7ff ff5d 	bl	8000a88 <__sflush_r>
 8000bce:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000bd0:	07da      	lsls	r2, r3, #31
 8000bd2:	4605      	mov	r5, r0
 8000bd4:	d4e4      	bmi.n	8000ba0 <_fflush_r+0xc>
 8000bd6:	89a3      	ldrh	r3, [r4, #12]
 8000bd8:	059b      	lsls	r3, r3, #22
 8000bda:	d4e1      	bmi.n	8000ba0 <_fflush_r+0xc>
 8000bdc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8000bde:	f7ff fe59 	bl	8000894 <__retarget_lock_release_recursive>
 8000be2:	e7dd      	b.n	8000ba0 <_fflush_r+0xc>

08000be4 <__swhatbuf_r>:
 8000be4:	b570      	push	{r4, r5, r6, lr}
 8000be6:	460c      	mov	r4, r1
 8000be8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000bec:	2900      	cmp	r1, #0
 8000bee:	b096      	sub	sp, #88	; 0x58
 8000bf0:	4615      	mov	r5, r2
 8000bf2:	461e      	mov	r6, r3
 8000bf4:	da0d      	bge.n	8000c12 <__swhatbuf_r+0x2e>
 8000bf6:	89a3      	ldrh	r3, [r4, #12]
 8000bf8:	f013 0f80 	tst.w	r3, #128	; 0x80
 8000bfc:	f04f 0100 	mov.w	r1, #0
 8000c00:	bf0c      	ite	eq
 8000c02:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 8000c06:	2340      	movne	r3, #64	; 0x40
 8000c08:	2000      	movs	r0, #0
 8000c0a:	6031      	str	r1, [r6, #0]
 8000c0c:	602b      	str	r3, [r5, #0]
 8000c0e:	b016      	add	sp, #88	; 0x58
 8000c10:	bd70      	pop	{r4, r5, r6, pc}
 8000c12:	466a      	mov	r2, sp
 8000c14:	f000 f848 	bl	8000ca8 <_fstat_r>
 8000c18:	2800      	cmp	r0, #0
 8000c1a:	dbec      	blt.n	8000bf6 <__swhatbuf_r+0x12>
 8000c1c:	9901      	ldr	r1, [sp, #4]
 8000c1e:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 8000c22:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 8000c26:	4259      	negs	r1, r3
 8000c28:	4159      	adcs	r1, r3
 8000c2a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000c2e:	e7eb      	b.n	8000c08 <__swhatbuf_r+0x24>

08000c30 <__smakebuf_r>:
 8000c30:	898b      	ldrh	r3, [r1, #12]
 8000c32:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000c34:	079d      	lsls	r5, r3, #30
 8000c36:	4606      	mov	r6, r0
 8000c38:	460c      	mov	r4, r1
 8000c3a:	d507      	bpl.n	8000c4c <__smakebuf_r+0x1c>
 8000c3c:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000c40:	6023      	str	r3, [r4, #0]
 8000c42:	6123      	str	r3, [r4, #16]
 8000c44:	2301      	movs	r3, #1
 8000c46:	6163      	str	r3, [r4, #20]
 8000c48:	b002      	add	sp, #8
 8000c4a:	bd70      	pop	{r4, r5, r6, pc}
 8000c4c:	ab01      	add	r3, sp, #4
 8000c4e:	466a      	mov	r2, sp
 8000c50:	f7ff ffc8 	bl	8000be4 <__swhatbuf_r>
 8000c54:	9900      	ldr	r1, [sp, #0]
 8000c56:	4605      	mov	r5, r0
 8000c58:	4630      	mov	r0, r6
 8000c5a:	f7ff fe89 	bl	8000970 <_malloc_r>
 8000c5e:	b948      	cbnz	r0, 8000c74 <__smakebuf_r+0x44>
 8000c60:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000c64:	059a      	lsls	r2, r3, #22
 8000c66:	d4ef      	bmi.n	8000c48 <__smakebuf_r+0x18>
 8000c68:	f023 0303 	bic.w	r3, r3, #3
 8000c6c:	f043 0302 	orr.w	r3, r3, #2
 8000c70:	81a3      	strh	r3, [r4, #12]
 8000c72:	e7e3      	b.n	8000c3c <__smakebuf_r+0xc>
 8000c74:	89a3      	ldrh	r3, [r4, #12]
 8000c76:	6020      	str	r0, [r4, #0]
 8000c78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000c7c:	81a3      	strh	r3, [r4, #12]
 8000c7e:	9b00      	ldr	r3, [sp, #0]
 8000c80:	6163      	str	r3, [r4, #20]
 8000c82:	9b01      	ldr	r3, [sp, #4]
 8000c84:	6120      	str	r0, [r4, #16]
 8000c86:	b15b      	cbz	r3, 8000ca0 <__smakebuf_r+0x70>
 8000c88:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000c8c:	4630      	mov	r0, r6
 8000c8e:	f000 f81d 	bl	8000ccc <_isatty_r>
 8000c92:	b128      	cbz	r0, 8000ca0 <__smakebuf_r+0x70>
 8000c94:	89a3      	ldrh	r3, [r4, #12]
 8000c96:	f023 0303 	bic.w	r3, r3, #3
 8000c9a:	f043 0301 	orr.w	r3, r3, #1
 8000c9e:	81a3      	strh	r3, [r4, #12]
 8000ca0:	89a3      	ldrh	r3, [r4, #12]
 8000ca2:	431d      	orrs	r5, r3
 8000ca4:	81a5      	strh	r5, [r4, #12]
 8000ca6:	e7cf      	b.n	8000c48 <__smakebuf_r+0x18>

08000ca8 <_fstat_r>:
 8000ca8:	b538      	push	{r3, r4, r5, lr}
 8000caa:	4d07      	ldr	r5, [pc, #28]	; (8000cc8 <_fstat_r+0x20>)
 8000cac:	2300      	movs	r3, #0
 8000cae:	4604      	mov	r4, r0
 8000cb0:	4608      	mov	r0, r1
 8000cb2:	4611      	mov	r1, r2
 8000cb4:	602b      	str	r3, [r5, #0]
 8000cb6:	f7ff faf4 	bl	80002a2 <_fstat>
 8000cba:	1c43      	adds	r3, r0, #1
 8000cbc:	d102      	bne.n	8000cc4 <_fstat_r+0x1c>
 8000cbe:	682b      	ldr	r3, [r5, #0]
 8000cc0:	b103      	cbz	r3, 8000cc4 <_fstat_r+0x1c>
 8000cc2:	6023      	str	r3, [r4, #0]
 8000cc4:	bd38      	pop	{r3, r4, r5, pc}
 8000cc6:	bf00      	nop
 8000cc8:	200001b8 	.word	0x200001b8

08000ccc <_isatty_r>:
 8000ccc:	b538      	push	{r3, r4, r5, lr}
 8000cce:	4d06      	ldr	r5, [pc, #24]	; (8000ce8 <_isatty_r+0x1c>)
 8000cd0:	2300      	movs	r3, #0
 8000cd2:	4604      	mov	r4, r0
 8000cd4:	4608      	mov	r0, r1
 8000cd6:	602b      	str	r3, [r5, #0]
 8000cd8:	f7ff faf3 	bl	80002c2 <_isatty>
 8000cdc:	1c43      	adds	r3, r0, #1
 8000cde:	d102      	bne.n	8000ce6 <_isatty_r+0x1a>
 8000ce0:	682b      	ldr	r3, [r5, #0]
 8000ce2:	b103      	cbz	r3, 8000ce6 <_isatty_r+0x1a>
 8000ce4:	6023      	str	r3, [r4, #0]
 8000ce6:	bd38      	pop	{r3, r4, r5, pc}
 8000ce8:	200001b8 	.word	0x200001b8

08000cec <_sbrk_r>:
 8000cec:	b538      	push	{r3, r4, r5, lr}
 8000cee:	4d06      	ldr	r5, [pc, #24]	; (8000d08 <_sbrk_r+0x1c>)
 8000cf0:	2300      	movs	r3, #0
 8000cf2:	4604      	mov	r4, r0
 8000cf4:	4608      	mov	r0, r1
 8000cf6:	602b      	str	r3, [r5, #0]
 8000cf8:	f7ff fafc 	bl	80002f4 <_sbrk>
 8000cfc:	1c43      	adds	r3, r0, #1
 8000cfe:	d102      	bne.n	8000d06 <_sbrk_r+0x1a>
 8000d00:	682b      	ldr	r3, [r5, #0]
 8000d02:	b103      	cbz	r3, 8000d06 <_sbrk_r+0x1a>
 8000d04:	6023      	str	r3, [r4, #0]
 8000d06:	bd38      	pop	{r3, r4, r5, pc}
 8000d08:	200001b8 	.word	0x200001b8

08000d0c <_init>:
 8000d0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d0e:	bf00      	nop
 8000d10:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d12:	bc08      	pop	{r3}
 8000d14:	469e      	mov	lr, r3
 8000d16:	4770      	bx	lr

08000d18 <_fini>:
 8000d18:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d1a:	bf00      	nop
 8000d1c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000d1e:	bc08      	pop	{r3}
 8000d20:	469e      	mov	lr, r3
 8000d22:	4770      	bx	lr
